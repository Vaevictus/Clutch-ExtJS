Ext.data.JsonP.Deft_util_Function({"meta":{},"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>Deft.Function</div><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Deft.util.Function</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Function.html#Deft-util-Function' target='_blank'>Function.js</a></div></pre><div class='doc-contents'><p>A collection of useful static methods for interacting with Functions.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-memoize' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.util.Function'>Deft.util.Function</span><br/><a href='source/Function.html#Deft-util-Function-static-method-memoize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.util.Function-static-method-memoize' class='name expandable'>memoize</a>( <span class='pre'>fn, scope, hashFn</span> ) : Function<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns a new wrapper function that caches the return value for previously processed function argument(s). ...</div><div class='long'><p>Returns a new wrapper function that caches the return value for previously processed function argument(s).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>Function to wrap.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional scope in which to execute the wrapped function.</p>\n</div></li><li><span class='pre'>hashFn</span> : Function<div class='sub-desc'><p>Optional function used to compute a hash key for storing the result, based on the arguments to the original function.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>The new wrapper function.</p>\n</div></li></ul></div></div></div><div id='static-method-nextTick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.util.Function'>Deft.util.Function</span><br/><a href='source/Function.html#Deft-util-Function-static-method-nextTick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.util.Function-static-method-nextTick' class='name expandable'>nextTick</a>( <span class='pre'>fn, scope</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Schedules the specified callback function to be executed on the next turn of the event loop. ...</div><div class='long'><p>Schedules the specified callback function to be executed on the next turn of the event loop.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>Callback function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional scope for the callback.</p>\n</div></li></ul></div></div></div><div id='static-method-spread' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.util.Function'>Deft.util.Function</span><br/><a href='source/Function.html#Deft-util-Function-static-method-spread' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.util.Function-static-method-spread' class='name expandable'>spread</a>( <span class='pre'>fn, scope</span> ) : Function<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Creates a new wrapper function that spreads the passed Array over the target function arguments. ...</div><div class='long'><p>Creates a new wrapper function that spreads the passed Array over the target function arguments.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>Function to wrap.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional scope in which to execute the wrapped function.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>The new wrapper function.</p>\n</div></li></ul></div></div></div></div></div></div></div>","component":false,"alternateClassNames":["Deft.Function"],"autodetected":{"uses":true,"alternateClassNames":true,"aliases":true,"members":true,"mixins":true,"extends":true,"code_type":true,"requires":true},"aliases":{},"mixedInto":[],"parentMixins":[],"superclasses":["Ext.Base"],"members":[{"meta":{"static":true},"owner":"Deft.util.Function","name":"memoize","id":"static-method-memoize","tagname":"method"},{"meta":{"static":true},"owner":"Deft.util.Function","name":"nextTick","id":"static-method-nextTick","tagname":"method"},{"meta":{"static":true},"owner":"Deft.util.Function","name":"spread","id":"static-method-spread","tagname":"method"}],"mixins":[],"extends":"Ext.Base","subclasses":[],"code_type":"ext_define","name":"Deft.util.Function","id":"class-Deft.util.Function","requires":[],"tagname":"class","files":[{"href":"Function.html#Deft-util-Function","filename":"Function.js"}]});